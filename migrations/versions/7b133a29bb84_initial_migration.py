"""Initial migration

Revision ID: 7b133a29bb84
Revises: 
Create Date: 2025-06-19 11:20:09.896704

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7b133a29bb84'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('problem_description', sa.Text(), nullable=False),
    sa.Column('goal', sa.Text(), nullable=False),
    sa.Column('target_audience', sa.Text(), nullable=False),
    sa.Column('implementation_plan', sa.Text(), nullable=False),
    sa.Column('executor_info', sa.Text(), nullable=False),
    sa.Column('total_budget', sa.Float(), nullable=False),
    sa.Column('budget_breakdown', sa.Text(), nullable=False),
    sa.Column('expected_result', sa.Text(), nullable=False),
    sa.Column('risks', sa.Text(), nullable=False),
    sa.Column('duration', sa.String(length=100), nullable=False),
    sa.Column('reporting_plan', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('website', sa.String(length=200), nullable=True),
    sa.Column('social_links', sa.Text(), nullable=True),
    sa.Column('image_url', sa.String(length=300), nullable=True),
    sa.Column('document_url', sa.String(length=300), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.execute('DROP TABLE IF EXISTS dao_vote CASCADE')
    op.execute('DROP TABLE IF EXISTS astro_image_storage CASCADE')
    op.execute('DROP TABLE IF EXISTS "order" CASCADE')
    op.execute('DROP TABLE IF EXISTS airdrop CASCADE')
    op.execute('DROP TABLE IF EXISTS product_image CASCADE')
    op.execute('DROP TABLE IF EXISTS image_storage CASCADE')
    op.execute('DROP TABLE IF EXISTS token CASCADE')
    op.execute('DROP TABLE IF EXISTS astro_blog_block CASCADE')
    op.execute('DROP TABLE IF EXISTS блок CASCADE')
    op.execute('DROP TABLE IF EXISTS order_item CASCADE')
    op.execute('DROP TABLE IF EXISTS category CASCADE')
    op.execute('DROP TABLE IF EXISTS cart CASCADE')
    op.execute('DROP TABLE IF EXISTS dao_proposal CASCADE')
    op.execute('DROP TABLE IF EXISTS "user" CASCADE')
    op.execute('DROP TABLE IF EXISTS content_generation_log CASCADE')
    op.execute('DROP TABLE IF EXISTS autoposting_schedule CASCADE')
    op.execute('DROP TABLE IF EXISTS astro_block CASCADE')
    op.execute('DROP TABLE IF EXISTS blog_post CASCADE')
    op.execute('DROP TABLE IF EXISTS block CASCADE')
    op.execute('DROP TABLE IF EXISTS astro_blog_post CASCADE')
    op.execute('DROP TABLE IF EXISTS shop_blog_post CASCADE')
    op.execute('DROP TABLE IF EXISTS astro_blog_topic CASCADE')
    op.execute('DROP TABLE IF EXISTS blog_block CASCADE')
    op.execute('DROP TABLE IF EXISTS publication_schedule CASCADE')
    op.execute('DROP TABLE IF EXISTS product CASCADE')
    op.execute('DROP TABLE IF EXISTS payment_method CASCADE')
    op.execute('DROP TABLE IF EXISTS blog_topic CASCADE')
    op.execute('DROP TABLE IF EXISTS airdrop_participation CASCADE')
    op.execute('DROP TABLE IF EXISTS token_sale CASCADE')
    op.execute('DROP TABLE IF EXISTS payment CASCADE')
    op.execute('DROP TABLE IF EXISTS token_purchase CASCADE')
    op.execute('DROP TABLE IF EXISTS settings CASCADE')
    op.execute('DROP TABLE IF EXISTS cart_item CASCADE')
    op.execute('DROP TABLE IF EXISTS astro_publication_schedule CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('astro_publication_schedule',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('topic_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('platform', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('scheduled_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('repeat_weekly', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('day_of_week', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('time_of_day', sa.VARCHAR(length=5), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_run', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True)
    )
    op.create_table('cart_item',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cart_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cart_id'], ['cart.id'], name=op.f('cart_item_cart_id_fkey')),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('cart_item_product_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('cart_item_pkey'))
    )
    op.create_table('settings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('facebook', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('instagram', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('telegram', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('contract_address', sa.VARCHAR(length=42), autoincrement=False, nullable=True),
    sa.Column('token_name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('token_symbol', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('network_rpc', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('network_chain_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('settings_pkey'))
    )
    op.create_table('token_purchase',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token_sale_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('wallet_address', sa.VARCHAR(length=42), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_paid', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('payment_method_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('tx_hash', sa.VARCHAR(length=66), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['payment_method_id'], ['payment_method.id'], name=op.f('token_purchase_payment_method_id_fkey')),
    sa.ForeignKeyConstraint(['token_sale_id'], ['token_sale.id'], name=op.f('token_purchase_token_sale_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('token_purchase_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('token_purchase_pkey'))
    )
    op.create_table('payment',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('payment_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_name', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('method_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('payment_info', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('invoice_pdf', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('proof_image', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['method_id'], ['payment_method.id'], name='payment_method_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='payment_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('token_sale',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('total_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('min_purchase', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('max_purchase', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('title_ua', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_en', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_de', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_ru', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('description_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('token_sale_pkey'))
    )
    op.create_table('airdrop_participation',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('airdrop_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('wallet_address', sa.VARCHAR(length=42), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('tx_hash', sa.VARCHAR(length=66), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['airdrop_id'], ['airdrop.id'], name=op.f('airdrop_participation_airdrop_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('airdrop_participation_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('airdrop_participation_pkey'))
    )
    op.create_table('blog_topic',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('blog_topic_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('priority', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('scheduled_for', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('blog_block_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title_ua', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_en', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_de', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_ru', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('description_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='blog_topic_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('payment_method',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('payment_method_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('details', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('qr_code', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('name_ua', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('name_en', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('name_de', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('name_ru', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('description_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('invoice_pdf', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='payment_method_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('product',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('product_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('slug', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('image', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('token_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('is_digital', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('name_ua', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('name_en', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('name_de', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('name_ru', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('description_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('example_url', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('features', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('delivery_time', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('support_period', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name='product_category_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='product_pkey'),
    sa.UniqueConstraint('slug', name='product_slug_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('publication_schedule',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('topic_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('platform', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('scheduled_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('repeat_weekly', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('day_of_week', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('time_of_day', sa.VARCHAR(length=5), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_run', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['blog_topic.id'], name=op.f('publication_schedule_topic_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('publication_schedule_pkey'))
    )
    op.create_table('blog_block',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('featured_image', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('position', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('title_ua', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title_en', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title_de', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title_ru', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('blog_block_pkey'))
    )
    op.create_table('astro_blog_topic',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('priority', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('scheduled_for', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('blog_block_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title_ua', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_en', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_de', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_ru', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('description_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_ru', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('shop_blog_post',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('slug', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('featured_image', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_published', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('is_featured', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('publish_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('title_ua', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title_en', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title_de', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title_ru', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_auto_generated', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('topic_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('telegram_post_id', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('other_platform_links', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['blog_topic.id'], name=op.f('shop_blog_post_topic_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('shop_blog_post_pkey'))
    )
    op.create_table('astro_blog_post',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('slug', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('featured_image', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_published', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_featured', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('publish_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('title_ua', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title_en', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title_de', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title_ru', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_auto_generated', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('topic_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('telegram_post_id', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('other_platform_links', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True)
    )
    op.create_table('block',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('image', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('slug', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('is_top', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('title_ua', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_en', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_de', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_ru', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('content_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('block_pkey')),
    sa.UniqueConstraint('slug', name=op.f('block_slug_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('blog_post',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('slug', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('featured_image', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_published', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_featured', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('publish_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('title_ua', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title_en', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title_de', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title_ru', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_auto_generated', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('topic_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('telegram_post_id', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('other_platform_links', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['blog_topic.id'], name=op.f('blog_post_topic_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('blog_post_pkey')),
    sa.UniqueConstraint('slug', name=op.f('blog_post_slug_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('astro_block',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('image', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('slug', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('is_top', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('title_ua', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_en', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_de', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_ru', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('content_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_ru', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('autoposting_schedule',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('days_of_week', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('posting_time', sa.VARCHAR(length=5), autoincrement=False, nullable=True),
    sa.Column('auto_translate', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('target_languages', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('generate_images', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('image_style', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('post_to_telegram', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('autoposting_schedule_pkey'))
    )
    op.create_table('content_generation_log',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('topic_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('action', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('duration_seconds', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['blog_topic.id'], name=op.f('content_generation_log_topic_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('content_generation_log_pkey'))
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('wallet_address', sa.VARCHAR(length=42), autoincrement=False, nullable=True),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('token_balance', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('username', name='user_username_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('dao_proposal',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('dao_proposal_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('min_tokens_to_vote', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('votes_for', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('votes_against', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('title_ua', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_en', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_de', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_ru', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('description_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], name='dao_proposal_author_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='dao_proposal_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('cart',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('cart_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('cart_pkey'))
    )
    op.create_table('category',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('category_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('slug', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('image', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name_ua', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('name_en', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('name_de', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('name_ru', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('description_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='category_pkey'),
    sa.UniqueConstraint('slug', name='category_slug_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('order_item',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('token_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], name=op.f('order_item_order_id_fkey')),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('order_item_product_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('order_item_pkey'))
    )
    op.create_table('блок',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('image', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('slug', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('is_top', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('title_ua', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_en', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_de', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_ru', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('content_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('блок_pkey')),
    sa.UniqueConstraint('slug', name=op.f('блок_slug_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('astro_blog_block',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('featured_image', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('position', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('title_ua', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title_en', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title_de', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('title_ru', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('summary_ru', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('token',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('symbol', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('contract_address', sa.VARCHAR(length=42), autoincrement=False, nullable=True),
    sa.Column('decimals', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_supply', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('circulating_supply', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('token_price_usd', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('token_pkey'))
    )
    op.create_table('image_storage',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('binary_data', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('content_type', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('image_storage_pkey')),
    sa.UniqueConstraint('filename', name=op.f('image_storage_filename_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('product_image',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('image_path', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_main', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('product_image_product_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('product_image_pkey'))
    )
    op.create_table('airdrop',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('total_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('amount_per_user', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('title_ua', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_en', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_de', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title_ru', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('description_ua', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_en', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_de', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description_ru', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('airdrop_pkey'))
    )
    op.create_table('order',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('total_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_token_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('payment_type', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('payment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tx_hash', sa.VARCHAR(length=66), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], name=op.f('order_payment_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('order_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('order_pkey'))
    )
    op.create_table('astro_image_storage',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('filename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('binary_data', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('content_type', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True)
    )
    op.create_table('dao_vote',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('proposal_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('wallet_address', sa.VARCHAR(length=42), autoincrement=False, nullable=True),
    sa.Column('vote_weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('vote_for', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('tx_hash', sa.VARCHAR(length=66), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['proposal_id'], ['dao_proposal.id'], name=op.f('dao_vote_proposal_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('dao_vote_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('dao_vote_pkey'))
    )
    op.drop_table('users')
    op.drop_table('projects')
    # ### end Alembic commands ###
