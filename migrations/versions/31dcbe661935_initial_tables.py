"""
Revision ID: 31dcbe661935
Revises: 
Create Date: 2025-09-14 15:40:00.000000
"""

from alembic import op
import sqlalchemy as sa
import os

# Check if we're using PostgreSQL or SQLite
def use_schema():
    """Returns True if we should use schema (PostgreSQL), False for SQLite"""
    return bool(os.environ.get('DATABASE_URL'))

# revision identifiers, used by Alembic.
revision = '31dcbe661935'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Conditionally use schema based on database type
    kwargs = {'schema': 'brama'} if use_schema() else {}
    
    op.create_table('blocks',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=True),
        sa.Column('content', sa.Text(), nullable=True),
        sa.Column('type', sa.String(length=50), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('image_url', sa.String(length=255), nullable=True),
        sa.Column('translations', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        **kwargs
    )
    # Добавьте другие таблицы по необходимости
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Conditionally use schema based on database type
    kwargs = {'schema': 'brama'} if use_schema() else {}
    op.drop_table('blocks', **kwargs)
    # ### end Alembic commands ###
